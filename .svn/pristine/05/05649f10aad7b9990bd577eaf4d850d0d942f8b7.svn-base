<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.guanzf.common.core.dao.ProduceMapper">
  <resultMap id="BaseResultMap" type="ProduceInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PRODUCE_ID" jdbcType="VARCHAR" property="produceId" />
    <result column="PRODUCE_NAME" jdbcType="VARCHAR" property="produceName" />
    <result column="PRODUCE_TYPE" jdbcType="VARCHAR" property="produceType" />
    <result column="PRODUCE_PRICE" jdbcType="REAL" property="producePrice" />
    <result column="PRODUCE_PURCHASE_TIMES" jdbcType="INTEGER" property="producePurchaseTimes" />
    <result column="PRODUCE_WEIGHT" jdbcType="REAL" property="produceWeight" />
    <result column="PRODUCE_IMAGE_URL" jdbcType="VARCHAR" property="produceImageUrl" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="PRODUCE_PRAISE_NUM" jdbcType="INTEGER" property="producePraiseNum" />
    <result column="PRODUCE_BAD_NUM" jdbcType="INTEGER" property="produceBadNum" />
    <result column="PRODUCE_SELL_NUM" jdbcType="INTEGER" property="produceSellNum" />
    <result column="COMMODITY_STRUCTRUE_ID" jdbcType="VARCHAR" property="commodityStructrueId" />
    <result column="PRODUCE_DESC" jdbcType="VARCHAR" property="produceDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PRODUCE_ID, PRODUCE_NAME, PRODUCE_TYPE, PRODUCE_PRICE, PRODUCE_PURCHASE_TIMES, PRODUCE_WEIGHT, 
    PRODUCE_IMAGE_URL, CREATE_DATE, PRODUCE_PRAISE_NUM, PRODUCE_BAD_NUM, PRODUCE_SELL_NUM, 
    COMMODITY_STRUCTRUE_ID, PRODUCE_DESC
  </sql>
  <select id="selectByExample" parameterType="pers.guanzf.common.core.model.ProduceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from g_produce
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from g_produce
    where PRODUCE_ID = #{produceId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from g_produce
    where PRODUCE_ID = #{produceId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pers.guanzf.common.core.model.ProduceExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from g_produce
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.guanzf.common.core.model.Produce">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into g_produce (PRODUCE_ID, PRODUCE_NAME, PRODUCE_TYPE, 
      PRODUCE_PRICE, PRODUCE_PURCHASE_TIMES, PRODUCE_WEIGHT, 
      PRODUCE_IMAGE_URL, CREATE_DATE, PRODUCE_PRAISE_NUM, 
      PRODUCE_BAD_NUM, PRODUCE_SELL_NUM, COMMODITY_STRUCTRUE_ID, 
      PRODUCE_DESC)
    values (#{produceId,jdbcType=VARCHAR}, #{produceName,jdbcType=VARCHAR}, #{produceType,jdbcType=VARCHAR}, 
      #{producePrice,jdbcType=REAL}, #{producePurchaseTimes,jdbcType=INTEGER}, #{produceWeight,jdbcType=REAL}, 
      #{produceImageUrl,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{producePraiseNum,jdbcType=INTEGER}, 
      #{produceBadNum,jdbcType=INTEGER}, #{produceSellNum,jdbcType=INTEGER}, #{commodityStructrueId,jdbcType=VARCHAR}, 
      #{produceDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pers.guanzf.common.core.model.Produce">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into g_produce
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="produceId != null">
        PRODUCE_ID,
      </if>
      <if test="produceName != null">
        PRODUCE_NAME,
      </if>
      <if test="produceType != null">
        PRODUCE_TYPE,
      </if>
      <if test="producePrice != null">
        PRODUCE_PRICE,
      </if>
      <if test="producePurchaseTimes != null">
        PRODUCE_PURCHASE_TIMES,
      </if>
      <if test="produceWeight != null">
        PRODUCE_WEIGHT,
      </if>
      <if test="produceImageUrl != null">
        PRODUCE_IMAGE_URL,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="producePraiseNum != null">
        PRODUCE_PRAISE_NUM,
      </if>
      <if test="produceBadNum != null">
        PRODUCE_BAD_NUM,
      </if>
      <if test="produceSellNum != null">
        PRODUCE_SELL_NUM,
      </if>
      <if test="commodityStructrueId != null">
        COMMODITY_STRUCTRUE_ID,
      </if>
      <if test="produceDesc != null">
        PRODUCE_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="produceId != null">
        #{produceId,jdbcType=VARCHAR},
      </if>
      <if test="produceName != null">
        #{produceName,jdbcType=VARCHAR},
      </if>
      <if test="produceType != null">
        #{produceType,jdbcType=VARCHAR},
      </if>
      <if test="producePrice != null">
        #{producePrice,jdbcType=REAL},
      </if>
      <if test="producePurchaseTimes != null">
        #{producePurchaseTimes,jdbcType=INTEGER},
      </if>
      <if test="produceWeight != null">
        #{produceWeight,jdbcType=REAL},
      </if>
      <if test="produceImageUrl != null">
        #{produceImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="producePraiseNum != null">
        #{producePraiseNum,jdbcType=INTEGER},
      </if>
      <if test="produceBadNum != null">
        #{produceBadNum,jdbcType=INTEGER},
      </if>
      <if test="produceSellNum != null">
        #{produceSellNum,jdbcType=INTEGER},
      </if>
      <if test="commodityStructrueId != null">
        #{commodityStructrueId,jdbcType=VARCHAR},
      </if>
      <if test="produceDesc != null">
        #{produceDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.guanzf.common.core.model.ProduceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from g_produce
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update g_produce
    <set>
      <if test="record.produceId != null">
        PRODUCE_ID = #{record.produceId,jdbcType=VARCHAR},
      </if>
      <if test="record.produceName != null">
        PRODUCE_NAME = #{record.produceName,jdbcType=VARCHAR},
      </if>
      <if test="record.produceType != null">
        PRODUCE_TYPE = #{record.produceType,jdbcType=VARCHAR},
      </if>
      <if test="record.producePrice != null">
        PRODUCE_PRICE = #{record.producePrice,jdbcType=REAL},
      </if>
      <if test="record.producePurchaseTimes != null">
        PRODUCE_PURCHASE_TIMES = #{record.producePurchaseTimes,jdbcType=INTEGER},
      </if>
      <if test="record.produceWeight != null">
        PRODUCE_WEIGHT = #{record.produceWeight,jdbcType=REAL},
      </if>
      <if test="record.produceImageUrl != null">
        PRODUCE_IMAGE_URL = #{record.produceImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.producePraiseNum != null">
        PRODUCE_PRAISE_NUM = #{record.producePraiseNum,jdbcType=INTEGER},
      </if>
      <if test="record.produceBadNum != null">
        PRODUCE_BAD_NUM = #{record.produceBadNum,jdbcType=INTEGER},
      </if>
      <if test="record.produceSellNum != null">
        PRODUCE_SELL_NUM = #{record.produceSellNum,jdbcType=INTEGER},
      </if>
      <if test="record.commodityStructrueId != null">
        COMMODITY_STRUCTRUE_ID = #{record.commodityStructrueId,jdbcType=VARCHAR},
      </if>
      <if test="record.produceDesc != null">
        PRODUCE_DESC = #{record.produceDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update g_produce
    set PRODUCE_ID = #{record.produceId,jdbcType=VARCHAR},
      PRODUCE_NAME = #{record.produceName,jdbcType=VARCHAR},
      PRODUCE_TYPE = #{record.produceType,jdbcType=VARCHAR},
      PRODUCE_PRICE = #{record.producePrice,jdbcType=REAL},
      PRODUCE_PURCHASE_TIMES = #{record.producePurchaseTimes,jdbcType=INTEGER},
      PRODUCE_WEIGHT = #{record.produceWeight,jdbcType=REAL},
      PRODUCE_IMAGE_URL = #{record.produceImageUrl,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      PRODUCE_PRAISE_NUM = #{record.producePraiseNum,jdbcType=INTEGER},
      PRODUCE_BAD_NUM = #{record.produceBadNum,jdbcType=INTEGER},
      PRODUCE_SELL_NUM = #{record.produceSellNum,jdbcType=INTEGER},
      COMMODITY_STRUCTRUE_ID = #{record.commodityStructrueId,jdbcType=VARCHAR},
      PRODUCE_DESC = #{record.produceDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.guanzf.common.core.model.Produce">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update g_produce
    <set>
      <if test="produceName != null">
        PRODUCE_NAME = #{produceName,jdbcType=VARCHAR},
      </if>
      <if test="produceType != null">
        PRODUCE_TYPE = #{produceType,jdbcType=VARCHAR},
      </if>
      <if test="producePrice != null">
        PRODUCE_PRICE = #{producePrice,jdbcType=REAL},
      </if>
      <if test="producePurchaseTimes != null">
        PRODUCE_PURCHASE_TIMES = #{producePurchaseTimes,jdbcType=INTEGER},
      </if>
      <if test="produceWeight != null">
        PRODUCE_WEIGHT = #{produceWeight,jdbcType=REAL},
      </if>
      <if test="produceImageUrl != null">
        PRODUCE_IMAGE_URL = #{produceImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="producePraiseNum != null">
        PRODUCE_PRAISE_NUM = #{producePraiseNum,jdbcType=INTEGER},
      </if>
      <if test="produceBadNum != null">
        PRODUCE_BAD_NUM = #{produceBadNum,jdbcType=INTEGER},
      </if>
      <if test="produceSellNum != null">
        PRODUCE_SELL_NUM = #{produceSellNum,jdbcType=INTEGER},
      </if>
      <if test="commodityStructrueId != null">
        COMMODITY_STRUCTRUE_ID = #{commodityStructrueId,jdbcType=VARCHAR},
      </if>
      <if test="produceDesc != null">
        PRODUCE_DESC = #{produceDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where PRODUCE_ID = #{produceId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.guanzf.common.core.model.Produce">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update g_produce
    set PRODUCE_NAME = #{produceName,jdbcType=VARCHAR},
      PRODUCE_TYPE = #{produceType,jdbcType=VARCHAR},
      PRODUCE_PRICE = #{producePrice,jdbcType=REAL},
      PRODUCE_PURCHASE_TIMES = #{producePurchaseTimes,jdbcType=INTEGER},
      PRODUCE_WEIGHT = #{produceWeight,jdbcType=REAL},
      PRODUCE_IMAGE_URL = #{produceImageUrl,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      PRODUCE_PRAISE_NUM = #{producePraiseNum,jdbcType=INTEGER},
      PRODUCE_BAD_NUM = #{produceBadNum,jdbcType=INTEGER},
      PRODUCE_SELL_NUM = #{produceSellNum,jdbcType=INTEGER},
      COMMODITY_STRUCTRUE_ID = #{commodityStructrueId,jdbcType=VARCHAR},
      PRODUCE_DESC = #{produceDesc,jdbcType=VARCHAR}
    where PRODUCE_ID = #{produceId,jdbcType=VARCHAR}
  </update>
</mapper>